name: Continuous Integration and Delivery
on: [push]

env:
  IMAGE: ghcr.io/$(echo $GITHUB_REPOSITORY | tr '[A-Z]' '[a-z]')/cm_prod_image

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Login to Github Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin ghcr.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image
        run: docker pull ${{ env.IMAGE }}:latest || true

      - name: Build image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --cache-from ${{ env.IMAGE }}:latest \
            --tag ${{ env.IMAGE }}:latest \
            --file ./classmanager/Dockerfile.prod \
            "./classmanager"

      - name: Push image
        run: docker push ${{ env.IMAGE }}:latest

  test:
    name: Test Docker image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Login to Github Packages
        run: echo ${GITHUB_TOKEN} | docker login -u ${GITHUB_ACTOR} --password-stdin ghcr.io
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image
        run: docker pull ${{ env.IMAGE }}:latest || true

      - name: Build image
        run: |
          docker buildx build \
            --platform linux/amd64 \
            --cache-from ${{ env.IMAGE }}:latest \
            --tag ${{ env.IMAGE }}:latest \
            --file ./classmanager/Dockerfile.prod \
            "./classmanager"

      - name: Run container
        run: |
          docker run \
            -d \
            --name class-manager-test \
            -e PORT=8765 \
            -e ENVIRONMENT=dev \
            -e DATABASE_URL=sqlite://sqlite.db \
            -e DATABASE_TEST_URL=sqlite://sqlite.db \
            -p 5003:8765 \
            ${{ env.IMAGE }}:latest

      - name: Pytest
        run: docker exec class-manager-test python -m pytest .
      - name: Flake8
        run: docker exec class-manager-test python -m flake8 .
      - name: Black
        run: docker exec class-manager-test python -m black . --check
      - nam:  isort
        run: docker exec class-manager-test python -m isort . --check-only
      - name: bandit
        run: docker exec class-manager-test python -m bandit -r . --exclude tests/
      - name: safety
        run: docker exec class-manager-test python -m safety check

