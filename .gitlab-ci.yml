stages:
  - build
  - test

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  IMAGE: registry.gitlab.com/apprentice.py/class_manager:class_manager_production_image

cache:
  key: ${CI_COMMIT_REF_SLUG}  # Cache per branch
  paths:
    - ${CI_PROJECT_DIR}/classmanager/.venv/


build-production-image:
  image: docker:24.0.6
  services:
    - docker:24.0.6-dind
  stage: build
  before_script:
    - cd classmanager
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY/$CI_PROJECT_PATH
    - docker build -t $IMAGE .
    - docker push $IMAGE
  only:
    changes:
      - classmanager/**/*


run tests:
  image: ubuntu:latest
  stage: test
  before_script:
    - apt-get update -y
    - apt-get install -y docker.io
    - docker pull $IMAGE
  script:
    - docker pull $IMAGE
    - >
      docker run
      -d
      --name class_manager_test_container
      -e PORT=8765
      -e ENVIRONMENT=dev
      -e DATABASE_URL=sqlite://sqlite.db
      -e DATABASE_TEST_URL=sqlite://sqlite.db
      $IMAGE
 # Ensure your image has black, isort, bandit, and safety installed
    - docker exec class_manager_test_container python -m bandit -r .
    - docker exec class_manager_test_container python -m black . --check
    - docker exec class_manager_test_container python -m isort . --check-only --profile black
    - docker exec class_manager_test_container python -m safety check
    # Run pytest tests
    - docker exec class_manager_test_container python -m pytest --junitxml=report.xml --cov=./ --cov-report=xml tests/**/*
  only:
    refs:
      - merge_requests
      - main
