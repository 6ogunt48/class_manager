stages:
  - build
  - test

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"


build-production-image:
  image: docker:24.0.6
  services:
    - docker:24.0.6-dind
  stage: build
  before_script:
    - cd classmanager
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY/$CI_PROJECT_PATH
    - docker build -t registry.gitlab.com/apprentice.py/class_manager:class_manager_production_image .
    - docker push registry.gitlab.com/apprentice.py/class_manager:class_manager_production_image
  only:
    changes:
      - classmanager/**/*


check-code-quality:
  stage: test
  image: registry.gitlab.com/apprentice.py/class_manager:class_manager_production_image
  before_script:
    - cd classmanager
    - poetry install
  script:
    - poetry run black . --check
    - poetry isort . --check-only --profile black
    - poetry run bandit .
    - poetry run safety check

  only:
    refs:
      - merge_requests
      - main
    changes:
      - classmanager/**/*
#
#
#run-application-tests:
#  stage: test
#  image: registry.gitlab.com/apprentice.py/class_manager:class_manager_production_image
#  before_script:
#    - poetry install
#  script:
#    - poetry run python -m pytest --junitxml=report.xml --cov=./ --cov-report=xml tests/**/*
#  after_script:
#    - bash <(curl -s https://codecov.io/bash)
#  artifacts:
#    when: always
#    reports:
#      junit: classmanager/report.xml
#
#
#
#
